import os
import pandas as pd
import google.generativeai as genai

Api_Key = os.getenv("GEMINI_API")
print(Api_Key)
genai.configure(
    api_key= Api_Key
)

model = genai.GenerativeModel("gemini-2.0-flash", system_instruction="You are a data analysis assistant. You will help users analyze their datasets and generate insights.")


def context_detection(data):
    content = pd.DataFrame(data)
    prompt = f"""
            Given the following dataset : {content}, describe:
            - What the dataset is about
            - Which domain or sector it most likely belongs to (e.g., business, healthcare, science, finance, etc.)
            - What kind of information it is tracking
            - What the user might be trying to analyze using this data
    """
    model_response = model.generate_content(
        contents=prompt
    )
    return model_response.text

def generate_report(data):
    content = pd.DataFrame(data)
    prompt = f"""
    You are a domain expert. Based on the column names, data types, and sample values below, guess what kind of dataset this is and describe the type of analysis that would be useful.

    DataSet : {content}

    Report generated by you should be of more than 2 pages and should be in a professional tone.

    Provide a detailed analysis plan that includes anything that you think is relevant to the dataset analysis (eg: business KPIs, clinical trials, research logs, etc). The analysis should also include the following:

        1. A brief description of the dataset, including:
            - The domain or industry it belongs to (e.g., business, healthcare, research)
            - The type of data it contains (e.g., numerical, categorical, time series)
        
        2. Provide a statistical overview of the dataset:
            - For numerical columns: mean, median, mode, min, max, and standard deviation
            - For categorical columns: list the most frequent categories and their counts
            - Mention any columns that have unusually high or low values (potential outliers)
            - Identify any strong correlations between numerical columns
            - Identify any missing values in key columns
            
                    
        3. Examine the dataset and uncover hidden patterns.
            Look for:
            - Trends or seasonality (if applicable)
            - Group-level patterns (e.g., category-wise differences)
            - Correlations between features(show and calculate correlations )
            - Clusters or data segments
            - Outliers or anomalies
        
        (optional) only if a dataset is related to business or sales(it should be in very detailed manner and should account for all the columns in the dataset):
        4. Business Recommendations:
            - Inventory optimization suggestions
            - Marketing strategy insights
            - Revenue improvement opportunities
            - Risk factors and mitigation
            - Customer segmentation strategies
            - Any other actionable insights based on the data


        4. top insights under the following categories:
            1. Top 5 columns with the most unique values
            2. Top 5 most frequent values from the top categorical columns
            3. Top 5 strongest correlations between numerical columns (positive or negative)
            4. Top 5 columns with the highest percentage of missing values
            5. Top 5 numerical columns with the highest average values
        
        5. Based on the analysis of the dataset below, summarize:
            - Key findings in 3-5 bullet points
            - Practical recommendations or next steps a user could take
            - Any interesting observations or actions worth pursuing
    
    Note : No need to include any code or programming language in the response and all the calculations should be done by you and their answers are to be provided by you in table form.
           and the report should be in markdown and that are suitable for PDF and response by you should be in detailed manner and should be in a professional tone, don't add any opening or closing statements (e.g.,"Okay, I will generate a detailed report based on the plant growth dataset you provided.",etc.)
    """
    model_response = model.generate_content(
        contents=f"Generate a detailed report on this data based on its {prompt}"
    )
    return model_response.text 

def answer_user_query(data, query, history,data_set):
    content = data
    prompt = f"""
    You are a data analysis assistant. Based on the report below, answer the user's query.

    Data-set : {data_set}

    Report : {content}

    User Query: {query}

    Chat history : {history}

    Provide a detailed answer to the user's query based on the dataset.
    """
    model_response = model.generate_content(
        contents=f"Answer the user's query based on this data: {prompt}"
    )
    return model_response.text
    